import { useEffect, useState, useContext } from "react";

import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";

import Banner from "../components/banner";
import Card from "../components/card";

import useTrackLocation from "../hooks/use-track-location";

import { fetchCoffeeStore } from "../lib/coffee-stores";

import { ACTION_TYPES, StoreContext } from "../context/store-context";

export async function getStaticProps(context) {
  const coffeeStores = await fetchCoffeeStore();

  return {
    props: {
      coffeeStores,
    },
  };
}

export default function Home(props) {
  const { handleTrackLocation, locationErrorMgs, isFindingLocation } =
    useTrackLocation();

  const handleOnBannerBtnClick = () => {
    handleTrackLocation();
  };

  //const [coffeeStores, setCoffeeStores] = useState("");
  const [error, setError] = useState("");

  const {
    dispatch,
    state: { coffeeStores, latLong },
  } = useContext(StoreContext);

  useEffect(() => {
    async function handleFetching() {
      if (latLong) {
        try {
          //const fetchedCoffeeStores = await fetchCoffeeStore(latLong, 10);
          const fetchedCoffeeStores = await fetch(
            `/api/getCoffeeStoresByLocation?latLong=${latLong}&limit=10`
          );

          const coffeeStores = await fetchedCoffeeStores.json();

          dispatch({
            type: ACTION_TYPES.SET_COFFEE_STORES,
            payload: { coffeeStores },
          });

          //setCoffeeStoresError("");

          //setCoffeeStores(fetchedCoffeeStores);
        } catch (error) {
          setError(error.message);
        }
      }
    }
    handleFetching();
  }, [latLong]);

  return (
    <div className={styles.container}>
      <Head>
        <title>Coffee Connoisseur</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <Banner
          buttonText={isFindingLocation ? "Locating..." : "View store nearby"}
          handleOnClick={handleOnBannerBtnClick}
        />
        {locationErrorMgs && <p>Something went wrong: {locationErrorMgs}</p>}
        <div className={styles.heroImage}>
          <Image
            src="/images/hero-image.png"
            width={700}
            height={400}
            alt="drinking-coffee"
          />
        </div>

        {error && <p>Something went wrong: {error}</p>}
        {coffeeStores.length > 0 && (
          <>
            <h2 className={styles.heading2}>Stores near me</h2>
            <div className={styles.cardLayout}>
              {coffeeStores.map((store, index) => {
                return (
                  <Card
                    key={store.id}
                    name={store.name}
                    imgUrl={
                      store.imgUrl ||
                      "https://images.unsplash.com/photo-1498804103079-a6351b050096?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=2468&q=80"
                    }
                    href={`coffee-store/${store.id}`}
                    className={styles.card}
                  />
                );
              })}
            </div>
          </>
        )}

        {props.coffeeStores.length > 0 && (
          <>
            <h2 className={styles.heading2}>Toronto stores</h2>
            <div className={styles.cardLayout}>
              {props.coffeeStores.map((store, index) => {
                return (
                  <Card
                    key={store.id}
                    name={store.name}
                    imgUrl={
                      store.imgUrl ||
                      "https://images.unsplash.com/photo-1498804103079-a6351b050096?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=2468&q=80"
                    }
                    href={`coffee-store/${store.id}`}
                    className={styles.card}
                  />
                );
              })}
            </div>
          </>
        )}
      </main>
    </div>
  );
}
